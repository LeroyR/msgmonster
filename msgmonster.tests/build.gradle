plugins {
    id 'com.diffplug.spotless'
    id 'java'
}

eclipse.classpath.file {
    // instruct eclipse plugin to put everything to module path
    whenMerged {
        entries.findAll { it.kind == 'lib' }.each { it.entryAttributes['module'] = 'true' }
    }
}

dependencies {
    testImplementation project(':msgmonster')
    testImplementation 'io.github.lambdaprime:id.xfunctiontests:1.0-SNAPSHOT'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.4.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')
    testRuntimeOnly("org.junit.platform:junit-platform-commons:1.7.0")
}

String testDir = "$buildDir/${projectName}"
String testSrcDir = "$projectDir/src/test"

// Gradle has no UnZip task so we reuse Copy for that
task myTestCopy(type: Copy) {
    mkdir file(testDir)
    from zipTree("${project.rootDir}/${projectName}/release/${releaseFileName}")
    into "$buildDir"
}

test {
    useJUnitPlatform()
    testLogging {
        events "started", "failed"
    }
}

myTestCopy.dependsOn project(':msgmonster').createRelease
compileTestJava.dependsOn myTestCopy
jar.dependsOn myTestCopy

// run spotless and format code before the build
testClasses.dependsOn spotlessApply
